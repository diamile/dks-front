{"remainingRequest":"C:\\Users\\diami\\Desktop\\dakarspectatornews\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\diami\\Desktop\\dakarspectatornews\\client\\src\\views\\Culture.vue?vue&type=template&id=5c612564&scoped=true&","dependencies":[{"path":"C:\\Users\\diami\\Desktop\\dakarspectatornews\\client\\src\\views\\Culture.vue","mtime":1616956846157},{"path":"C:\\Users\\diami\\Desktop\\dakarspectatornews\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615656863448},{"path":"C:\\Users\\diami\\Desktop\\dakarspectatornews\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1615656908637},{"path":"C:\\Users\\diami\\Desktop\\dakarspectatornews\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615656863448},{"path":"C:\\Users\\diami\\Desktop\\dakarspectatornews\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1615656908637}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}