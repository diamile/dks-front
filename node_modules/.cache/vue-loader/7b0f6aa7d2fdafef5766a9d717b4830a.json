{"remainingRequest":"C:\\Users\\diami\\Desktop\\dakarspectatornews\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\diami\\Desktop\\dakarspectatornews\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\diami\\Desktop\\dakarspectatornews\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\diami\\Desktop\\dakarspectatornews\\client\\src\\components\\Accueil\\People.vue?vue&type=template&id=a5b722cc&scoped=true&","dependencies":[{"path":"C:\\Users\\diami\\Desktop\\dakarspectatornews\\client\\src\\components\\Accueil\\People.vue","mtime":1617042713920},{"path":"C:\\Users\\diami\\Desktop\\dakarspectatornews\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\diami\\Desktop\\dakarspectatornews\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\diami\\Desktop\\dakarspectatornews\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\diami\\Desktop\\dakarspectatornews\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}