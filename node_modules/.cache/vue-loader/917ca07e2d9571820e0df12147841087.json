{"remainingRequest":"C:\\Users\\diami\\OneDrive\\Bureau\\dakarspectatornews\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\diami\\OneDrive\\Bureau\\dakarspectatornews\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\diami\\OneDrive\\Bureau\\dakarspectatornews\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\diami\\OneDrive\\Bureau\\dakarspectatornews\\client\\src\\components\\Article4.vue?vue&type=template&id=0de3c32e&scoped=true&","dependencies":[{"path":"C:\\Users\\diami\\OneDrive\\Bureau\\dakarspectatornews\\client\\src\\components\\Article4.vue","mtime":1616323963925},{"path":"C:\\Users\\diami\\OneDrive\\Bureau\\dakarspectatornews\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615656863448},{"path":"C:\\Users\\diami\\OneDrive\\Bureau\\dakarspectatornews\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1615656908637},{"path":"C:\\Users\\diami\\OneDrive\\Bureau\\dakarspectatornews\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615656863448},{"path":"C:\\Users\\diami\\OneDrive\\Bureau\\dakarspectatornews\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1615656908637}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF92bS5fbSgwKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygKICAgICAgImRpdiIsCiAgICAgIHsgc3RhdGljQ2xhc3M6ICJzaW5nbGVfbGVmdF9jb2xvdW1fd3JhcHBlciBzaW5nbGVfY2F0X2xlZnQiIH0sCiAgICAgIFsKICAgICAgICBfYygiaDIiLCB7IHN0YXRpY0NsYXNzOiAidGl0bGUiIH0sIFtfdm0uX3YoIkVjb25vbWllIildKSwKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJtb3JlIiwgYXR0cnM6IHsgaHJlZjogIiMiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCJtb3JlIikKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNpbmdsZV9jYXRfbGVmdF9jb250ZW50IGZsb2F0bGVmdCIgfSwgWwogICAgICAgICAgX2MoImgzIiwgWwogICAgICAgICAgICBfdm0uX3YoIkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0IGNvbnNlIGN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQgIikKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAiTnVsbGEgcXVpcyBsb3JlbSBuZXF1ZSwgbWF0dGlzIHZlbmVuYXRpcyBsZWN0dXMuIEluIGludGVyZHVtIHVsbGFtY29ycGVyIGRvbG9yIC4uLmludGVyZHVtIgogICAgICAgICAgICApCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInNpbmdsZV9jYXRfbGVmdF9jb250ZW50X21ldGEiIH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJieSAiKSwKICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJKb2huIERvZSIpXSksCiAgICAgICAgICAgIF92bS5fdigiIHwgMjkgY29tbWVudHMiKQogICAgICAgICAgXSkKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNpbmdsZV9jYXRfbGVmdF9jb250ZW50IGZsb2F0bGVmdCIgfSwgWwogICAgICAgICAgX2MoImgzIiwgWwogICAgICAgICAgICBfdm0uX3YoIkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0IGNvbnNlIGN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQgIikKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAiTnVsbGEgcXVpcyBsb3JlbSBuZXF1ZSwgbWF0dGlzIHZlbmVuYXRpcyBsZWN0dXMuIEluIGludGVyZHVtIHVsbGFtY29ycGVyIGRvbG9yIC4uLmludGVyZHVtIgogICAgICAgICAgICApCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInNpbmdsZV9jYXRfbGVmdF9jb250ZW50X21ldGEiIH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJieSAiKSwKICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJKb2huIERvZSIpXSksCiAgICAgICAgICAgIF92bS5fdigiIHwgMjkgY29tbWVudHMiKQogICAgICAgICAgXSkKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNpbmdsZV9jYXRfbGVmdF9jb250ZW50IGZsb2F0bGVmdCIgfSwgWwogICAgICAgICAgX2MoImgzIiwgWwogICAgICAgICAgICBfdm0uX3YoIkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0IGNvbnNlIGN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQgIikKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAiTnVsbGEgcXVpcyBsb3JlbSBuZXF1ZSwgbWF0dGlzIHZlbmVuYXRpcyBsZWN0dXMuIEluIGludGVyZHVtIHVsbGFtY29ycGVyIGRvbG9yIC4uLmludGVyZHVtIgogICAgICAgICAgICApCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInNpbmdsZV9jYXRfbGVmdF9jb250ZW50X21ldGEiIH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJieSAiKSwKICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJKb2huIERvZSIpXSksCiAgICAgICAgICAgIF92bS5fdigiIHwgMjkgY29tbWVudHMiKQogICAgICAgICAgXSkKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNpbmdsZV9jYXRfbGVmdF9jb250ZW50IGZsb2F0bGVmdCIgfSwgWwogICAgICAgICAgX2MoImgzIiwgWwogICAgICAgICAgICBfdm0uX3YoIkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0IGNvbnNlIGN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQgIikKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAiTnVsbGEgcXVpcyBsb3JlbSBuZXF1ZSwgbWF0dGlzIHZlbmVuYXRpcyBsZWN0dXMuIEluIGludGVyZHVtIHVsbGFtY29ycGVyIGRvbG9yIC4uLmludGVyZHVtIgogICAgICAgICAgICApCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInNpbmdsZV9jYXRfbGVmdF9jb250ZW50X21ldGEiIH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJieSAiKSwKICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJKb2huIERvZSIpXSksCiAgICAgICAgICAgIF92bS5fdigiIHwgMjkgY29tbWVudHMiKQogICAgICAgICAgXSkKICAgICAgICBdKQogICAgICBdCiAgICApCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}